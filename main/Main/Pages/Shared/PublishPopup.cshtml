@*
PUBLISH MODAL POPUP

ATRYBUTY:
- data-quiz-id: Id quizu
- data-quiz-name: Nazwa quizu
- data-callback-name: Nazwa callbacku js, wywołanego przy wciśnięciu przycisku publish. Callback ten musi zawierać 3
argumenty - quizId, openDate i closeDate
*@

<style>
    #publishPopup .modal-dialog {
        max-width: 650px;
    }

    #publishTipPanel {
        width: 215px;
        min-width: 215px;
    }
</style>

<div class="modal fade" id="publishPopup" tabindex="-1" role="dialog" aria-labelledby="publishPopupCenterTitle"
    aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    @{
        var textInfo = System.Globalization.CultureInfo.CurrentCulture.TextInfo;
        var today = DateTime.Today;
        var days = Enumerable.Range(0, 30).Select(offset => today.AddDays(offset)).ToList();

        var currentDay = DateTime.Now.Date;
        var nextWeekDay = currentDay.AddDays(7).Date;

        var currentHour = DateTime.Now.Hour;
        var currentMinute = DateTime.Now.Minute;
    }

    <div class=" modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content d-flex flex-row overflow-hidden">
            <div id="publishTipPanel"
                class="d-none d-sm-flex bg-pattern-sm text-white flex-column text-center align-items-center justify-content-center p-3">
                <span class="fw-bold fs-4 mb-1">Publikacja quizu</span>
                <p>W momencie opublikowania quizu nie będziesz miał już możliwości jego edycji, ani usunięcia. Dostęp do
                    niego uzyskają wszyscy użytkownicy, z którymi podzielisz się quizem.</p>
            </div>

            <div class="flex-grow-1 d-flex flex-column">
                <div class="d-flex flex-row modal-header">
                    <span id="publishedQuizName" class="fw-bold fs-4">Kartkówka 2A</span>
                    <button type="button" class="ms-auto btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>

                <div class="d-flex flex-column p-3">
                    <span class="mb-2">Użytkownicy uzyskają dostęp do quizu od:</span>
                    <div class="d-flex flex-row mb-3">
                        <div class="me-3 w-50">
                            <label class="form-label fw-bold">Data otwarcia</label>
                            <select id="openDateSelect" class="form-select validate" style="text-overflow: ellipsis;">
                                @foreach (var day in days)
                                {
                                    <option value="@day.ToString("yyyy-MM-dd")" selected="@(day.Date == currentDay)">
                                        @textInfo.ToTitleCase(day.ToString("dd MMMM yyyy, dddd"))
                                    </option>
                                }
                            </select>
                        </div>
                        <div class="w-50">
                            <label class="form-label fw-bold">Czas otwarcia</label>
                            <input type="time" id="openTimeSelect" name="time" class="form-select validate" value="@(currentHour.ToString("D2") + ":" + currentMinute.ToString("D2"))">
                        </div>
                    </div>

                    <span class="mb-2">Użytkownicy uzyskają dostęp do quizu od:</span>
                    <div class="d-flex flex-row mb-3">
                        <div class="me-3 w-50">
                            <label class="form-label fw-bold">Data zamknięcia</label>
                            <select id="closeDateSelect" class="form-select validate" style="text-overflow: ellipsis;">
                                @foreach (var day in days)
                                {
                                    <option value="@day.ToString("yyyy-MM-dd")" selected="@(day.Date == nextWeekDay)">
                                        @textInfo.ToTitleCase(day.ToString("dd MMMM yyyy, dddd"))
                                    </option>
                                }
                            </select>
                        </div>
                        <div class="w-50">
                            <label class="form-label fw-bold">Czas zamkniecia</label>
                            <input type="time" id="closeTimeSelect" name="time" class="form-select validate" value="@(currentHour.ToString("D2") + ":" + currentMinute.ToString("D2"))">
                        </div>
                    </div>
                </div>

                <div class="modal-footer justify-content-center align-items-center">
                    <button type="button" class="btn btn-secondary btn-sm-width" data-bs-dismiss="modal"
                        id="publishCancelButton">Anuluj</button>
                    <button type="button" class="btn btn-primary btn-sm-width" id="publishButton">Opublikuj</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    const publishPopup = document.getElementById('publishPopup');
    const publishButton = publishPopup.querySelector('#publishButton');
    let publishModalButton;

    publishPopup.addEventListener('show.bs.modal', function (event) {
        publishModalButton = event.relatedTarget;
        const quizName = publishModalButton.getAttribute('data-quiz-name');

        const nameElement = publishPopup.querySelector('#publishedQuizName');
        nameElement.textContent = quizName;
    });

    publishPopup.querySelectorAll('.validate').forEach(function (select) {
        select.addEventListener('change', validatePublishButton);
    });

    publishButton.addEventListener('click', function (event) {
        if (!validatePublishButton()) return;

        const openDate = publishPopup.querySelector('#openDateSelect').value;
        const openTime = publishPopup.querySelector('#openTimeSelect').value;

        const closeDate = publishPopup.querySelector('#closeDateSelect').value;
        const closeTime = publishPopup.querySelector('#closeTimeSelect').value;

        // need to be like this because of time zone converts
        const openDateTimeString = `${openDate}T${openTime}:00.000Z`;
        const closeDateTimeString = `${closeDate}T${closeTime}:00.000Z`;

        const callbackName = publishModalButton.getAttribute('data-callback-name');

        if (typeof window[callbackName] === 'function') {
            const quizId = publishModalButton.getAttribute('data-quiz-id');
            window[callbackName](quizId, openDateTimeString, closeDateTimeString);
            const closebutton = document.getElementById('publishCancelButton');
            closebutton.click();
        } else {
            console.error("Callback function not found:", callbackName);
        }
    });

    function validatePublishButton() {
        const openDateSelect = publishPopup.querySelector('#openDateSelect');
        const openTimeSelect = publishPopup.querySelector('#openTimeSelect');
        const closeDateSelect = publishPopup.querySelector('#closeDateSelect');
        const closeTimeSelect = publishPopup.querySelector('#closeTimeSelect');

        const openDate = publishPopup.querySelector('#openDateSelect').value;
        const openTime = publishPopup.querySelector('#openTimeSelect').value;

        const closeDate = publishPopup.querySelector('#closeDateSelect').value;
        const closeTime = publishPopup.querySelector('#closeTimeSelect').value;

        const openDateTime = new Date(`${openDate}T${openTime}`);
        const closeDateTime = new Date(`${closeDate}T${closeTime}`);
        const currentDateTime = new Date();

        openDateSelect.classList.remove('input-error');
        openTimeSelect.classList.remove('input-error');
        closeDateSelect.classList.remove('input-error');
        closeTimeSelect.classList.remove('input-error');

        let hasError = false;
        if (closeDateTime <= currentDateTime || closeDateTime <= openDateTime) {
            closeDateSelect.classList.add('input-error');
            closeTimeSelect.classList.add('input-error');
            hasError = true;
        }

        publishButton.disabled = hasError;
        return !hasError;
    }
</script>
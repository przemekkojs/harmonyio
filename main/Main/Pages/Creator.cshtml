@page
@model Main.Pages.CreatorModel

<head>
    <link rel="stylesheet" href="~/css/creator-style.css" />
</head>

<form method="post" class="h-100 w-100">
    <div class="h-100 w-100 d-flex flex-column">
        @*Ten margin, padding jest tu po to, aby zachować scrolla, ale jednocześnie nie ucinać shadow'a. To jest najgorsza linijka kodu, jaką w życiu napisałem, ale nie umiem inaczej tego zrobić'*@
        <div class="flex-grow-1 d-flex flex-row overflow-auto" style="margin: -20px; padding: 20px">
            <div class="left-panel bg-white rounded shadow me-3 p-3">
                <div class="mb-3">
                    <label asp-for="QuizName" class="form-label fw-bold"></label>
                    <input asp-for="QuizName" class="form-control" readonly="@Model.BrowseOnly" placeholder="Nazwa quizu">
                    <span asp-validation-for="QuizName" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="OpenDate" class="form-label fw-bold"></label>
                    <input asp-for="OpenDate" class="form-control" readonly="@Model.BrowseOnly">
                    <span asp-validation-for="OpenDate" class="text-danger"></span>
                </div>

                <div class="mb-3">
                    <label asp-for="CloseDate" class="form-label fw-bold"></label>
                    <input asp-for="CloseDate" class="form-control" readonly="@Model.BrowseOnly">
                    <span asp-validation-for="CloseDate" class="text-danger"></span>
                </div>
            </div>

            <div class="flex-grow-1 bg-white rounded shadow p-3 d-flex flex-column overflow-auto">
                <span asp-validation-for="Questions" id="questions-validation-error" class="text-danger mb-1"></span>

                <div id="excersise-container" class="d-flex flex-column">
                    @* EXCERSISES ARE FILLED WITH JS SCRIPT *@
                </div>

                @if (!Model.BrowseOnly)
                {
                    <div class="task task-add d-flex rounded text-center justify-content-center align-items-center" onclick="addExcersise()">
                        <i class="fas fa-plus me-1"></i>
                        <span class="fw-bold">Dodaj nowe zadanie</span>
                    </div>
                }
            </div>
        </div>

        <input type="hidden" asp-for="EditedQuizId" value="@Model.EditedQuizId" />
        <div class="bottom-bar d-flex align-items-center">
            <a asp-page="Created" class="btn btn-danger btn-std-width">Powrót</a>
            @if (!Model.BrowseOnly)
            {
                <button type="submit" asp-page-handler="Save" class="btn btn-secondary btn-std-width ms-auto">Zapisz</button>
                <button type="submit" asp-page-handler="Submit" class="btn btn-primary btn-std-width ms-3">Opublikuj</button>
            }
            else
            {
                <button type="button" class="btn btn-primary btn-std-width ms-auto">@(Model.Code == null ? "Quiz zakończony" : "KOD: " + Model.Code)</button>
                @if (Model.Code != null)
                {
                    <button type="button" class="btn btn-primary btn-std-width ms-auto" onclick="navigator.clipboard.writeText('harmony.io/solve?code=@Model.Code')">Skopiuj link quizu do schowka</button>
                }
            }
        </div>
    </div>
</form>


<script>
    let excersises = @Html.Raw(Json.Serialize(Model.Questions?.Select(q => q ?? "").ToList() ?? new List<string>()));

    function addExcersise() {
        excersises.push("");
        renderExcersises();

        document.getElementById('questions-validation-error').innerText = '';
    }

    function updateExcersise(index, value) {
        excersises[index] = value;

        document.getElementById('questions-validation-error').innerText = '';
    }

    function removeExcersise(index) {
        excersises.splice(index, 1);
        renderExcersises();
    }

    function renderExcersises() {
        const excersiseContainer = document.getElementById('excersise-container');
        excersiseContainer.innerHTML = '';

        excersises.forEach((excersise, index) => {
            excersiseContainer.innerHTML += `
                <div class="task task-creator bg-transparent shadow rounded p-3 mb-3 overflow-hidden">
                    <div class="d-flex h-100 align-items-center bg-secondary rounded shadow ">
                        <div class="task-number text-white fw-bold fs-1">${index + 1}</div>
                    </div>
                    <div class="task-content w-100 p-3">
                        <span class="mb-1">Kreator funkcji</span>
                        <input type="text" name="Questions[${index}]" class="form-control task-input" value="${excersise}" oninput="updateExcersise(${index}, this.value)" @(Model.BrowseOnly ? "readonly" : "")>
                    </div>
                    @if (!Model.BrowseOnly)
                    {
                        <div class="d-flex h-100 align-items-center">
                            <div class="vr me-3"></div>
                            <a href="#" onclick="removeExcersise(${index})" class="btn-icon ms-auto">
                                <i class="far fa-trash-can icon-sm"></i>
                            </a>
                        </div>
                    }
                </div>`;
        });
    }

    renderExcersises();
</script>

@section Scripts {
    @{
        <partial name="_ValidationScriptsPartial" />
    }
}
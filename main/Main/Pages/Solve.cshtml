@page
@model Main.Pages.SolveModel
@using Main.Models;

<head>
    <link rel="stylesheet" href="~/css/solve-style.css" />
</head>

<div class="h-100 w-100 d-flex flex-column">
    <div class="top-bar w-100 d-flex justify-content-between align-items-center">
        <div class="fw-bold fs-4">
            @Model.Quiz.Name
        </div>
        <div class="d-flex align-items-center">
            <img src="~/images/timer.png" alt="Timer" class="me-2 timer-img">
            <span id="timer">10h 13min</span>
        </div>
    </div>

    <hr class="hr my-3">

    <div class="flex-grow-1 w-100 d-flex flex-column">
        <div class="d-flex flex-row align-items-start question-area">
            <div class="question-square border border-secondary d-flex justify-content-center align-items-center me-3">
                <div id="excersise-number" class="fs-1 fw-bold">1</div>
            </div>

            <div class="flex-grow-1">
                <p id="excersise-question" class="m-0"></p>
            </div>
        </div>

        <div class="flex-grow-1 d-flex flex-row mt-3">
            <div class="music-staff h-100 flex-grow-1 d-flex justify-content-center align-items-center me-3">
                Pięciolinia
            </div>

            <div class="toolbox h-100 d-flex justify-content-center align-items-center">
                Toolbox
            </div>
        </div>
    </div>

    <hr class="hr mt-3">

    <div class="bottom-bar d-flex align-items-center">
        <a asp-page="Index" class="btn btn-danger btn-std-width me-auto">Powrót</a>
        <button id="btn-prev" onclick="prevQuestion()" class="btn btn-secondary btn-std-width mx-3">Poprzednie</button>

        <div id="excersises-buttons" class="d-flex align-items-center">
            @*EXCERSISES ARE FILLED WITH JS SCRIPT*@
        </div>
        <div id="div-last-ex">
            <img src="~/images/three_dots.png" alt="Three dots" class="ms-2 three-dots-img">
            <button id="btn-last-ex" onclick="lastQuestion()" class="btn btn-outline-secondary btn-tiny-width p-1 ms-2"></button>
        </div>

        <button id="btn-next" onclick="nextQuestion()" class="btn btn-secondary btn-std-width ms-3">Następne</button>
        <button id="btn-finish" class="btn btn-primary btn-std-width ms-3">Zakończ</button>
    </div>
</div>

<script>
    var excersises = @Json.Serialize(Model.Quiz.Excersises);
    var currentIndex = 0;

    function loadQuestion(index) {
        if (index >= 0 && index < excersises.length) {
            document.getElementById("excersise-number").innerText = index + 1;
            document.getElementById("excersise-question").innerText = excersises[index].question;

            document.getElementById("btn-next").style.display = index === excersises.length - 1 ? 'none' : 'inline-block';
            document.getElementById("btn-finish").style.display = index === excersises.length - 1 ? 'inline-block' : 'none';

            generateButtons(index);
        }
    }

    const maxVisibleButtons = 9;
    const targetVisibleOneSide = Math.floor(maxVisibleButtons / 2)
    function generateButtons(index) {
        var questionButtonsContainer = document.getElementById("excersises-buttons");
        questionButtonsContainer.innerHTML = '';

        var start = Math.max(index - targetVisibleOneSide, 0);
        var end = Math.min(index + targetVisibleOneSide, excersises.length - 1);

        var missingStart = start - (index - targetVisibleOneSide);
        var missingEnd = (index + targetVisibleOneSide) - end;

        if (missingStart > 0 && missingEnd == 0) {
            end = Math.min(end + missingStart, excersises.length - 1);
        }
        else if (missingEnd > 0 && missingStart == 0) {
            start = Math.max(start - missingEnd, 0);
        }

        if (end == excersises.length - 2) {
            end++;
        }

        for (var i = start; i <= end; i++) {
            var button = document.createElement("button");
            button.className = "btn " + (i === index ? "btn-secondary btn-current" : "btn-outline-secondary btn-hidable") + " btn-tiny-width p-1";
            button.innerText = i + 1;

            button.onclick = (function (i) {
                return function () {
                    currentIndex = i;
                    loadQuestion(currentIndex);
                };
            })(i);

            questionButtonsContainer.appendChild(button);

            if (i !== start) {
                button.classList.add("ms-2");
            }
        }

        document.getElementById("btn-last-ex").innerText = excersises.length;
        document.getElementById("div-last-ex").style.display = end < excersises.length - 1 ? 'inline-block' : 'none';
    }

    function prevQuestion() {
        if (currentIndex > 0) {
            currentIndex--;
            loadQuestion(currentIndex);
        }
    }

    function nextQuestion() {
        if (currentIndex < excersises.length - 1) {
            currentIndex++;
            loadQuestion(currentIndex);
        }
    }

    function lastQuestion() {
        if (currentIndex < excersises.length - 1) {
            currentIndex = excersises.length - 1;
            loadQuestion(currentIndex);
        }
    }

    loadQuestion(currentIndex);



    var closeDate = new Date("@Model.Quiz.CloseDate.ToString("o")");
    function updateTimer() {
        var now = new Date();
        var timeRemaining = closeDate - now;

        if (timeRemaining <= 0) {
            document.getElementById("countdown").innerText = "0m 0s";
            return;
        }

        var days = Math.floor(timeRemaining / (1000 * 60 * 60 * 24));
        var hours = Math.floor((timeRemaining % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        var minutes = Math.floor((timeRemaining % (1000 * 60 * 60)) / (1000 * 60));
        var seconds = Math.floor((timeRemaining % (1000 * 60)) / 1000);

        var displayText = "";

        if (days > 0) {
            displayText = `${days}d ${hours}h`;
        } else if (hours > 0) {
            displayText = `${hours}h ${minutes}m`;
        } else {
            displayText = `${minutes}m ${seconds}s`;
        }

        document.getElementById("timer").innerText = displayText;
    }

    updateTimer();
    setInterval(updateTimer, 1000);
</script>


<script>
    window.onload = function () {
        const bottomBar = document.querySelector('.bottom-bar');
        const current = document.querySelector('.btn-current');
        const hidable = document.querySelectorAll('.btn-hidable');

        function isOverflow() {
            return bottomBar.scrollWidth != bottomBar.clientWidth
        }
        function checkOverflow() {
            if (isOverflow()) {
                hidable.forEach(function (button) {
                    button.classList.add('d-none');
                });
            }
            else {
                hidable.forEach(function (button) {
                    button.classList.remove('d-none');
                });

                if (isOverflow()) {
                    hidable.forEach(function (button) {
                        button.classList.add('d-none');
                    });
                }
            }
        }

        checkOverflow();
        window.addEventListener('resize', checkOverflow);
    };</script>
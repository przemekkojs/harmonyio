@page
@model Main.Pages.BrowseModel
@using Main.Enumerations;
@using JsonConvert = Newtonsoft.Json.JsonConvert;
@{
    var totalPoints = Model.QuizResult.ExcersiseResults.Sum(er => er.Points);
    var totalMax = Model.QuizResult.ExcersiseResults.Sum(er => er.MaxPoints);
    var percent = Math.Round((totalPoints / (float)totalMax) * 100);
}

<head>
    <link rel="stylesheet" href="~/css/browse-style.css" />
</head>

<div class="h-100 w-100 d-flex flex-column">
    <div class="bg-white rounded shadow w-100 d-flex justify-content-between align-items-center p-3 mb-3">
        <div class="fw-bold fs-4">
            @Model.QuizResult.Quiz.Name
        </div>
        <div class="d-flex align-items-center">
            <span class="fw-bold me-2">Wynik</span>
            <div class="border border-secondary text-secondary fw-bold rounded px-2 py-1 me-2">
                @totalPoints / @totalMax
            </div>
            <div class="border border-secondary text-secondary fw-bold rounded px-2 py-1 me-4">
                @(percent)%
            </div>
            <span class="fw-bold me-2">Ocena</span>
            <div class="border border-secondary rounded text-secondary fw-bold px-2 py-1">
                @(((Grade)(Model.QuizResult.Grade!)).AsString())
            </div>
        </div>
    </div>

    <div class="flex-grow-1 bg-white rounded shadow p-3 w-100 d-flex flex-column overflow-auto">
        <div class="d-flex flex-row align-items-start question-area">
            <div class="question-square bg-secondary rounded shadow d-flex justify-content-center align-items-center me-3">
                <div id="excersise-number" class="fs-1 fw-bold text-white">
                    @*SET VIA JS*@
                </div>
            </div>

            <div class="flex-grow-1">
                <p id="excersise-question" class="m-0">
                    @*SET VIA JS*@
                </p>
            </div>
        </div>

        <div class="music-staff flex-grow-1 mt-3 w-100 d-flex flex-row justify-content-center align-items-center">
            <div class="music-staff-grade-area me-3 h-100 d-flex flex-column">
                <div class="flex-grow-1 bg-secondary shadow rounded mb-3 d-flex flex-column justify-content-center align-items-center">
                    <span class="fw-bold text-white">Punkty</span>
                    <span id="points-text" class="text-white">
                        @*SET VIA JS*@
                    </span>
                </div>

                <div class="flex-grow-1 bg-secondary shadow rounded mb-3 d-flex flex-column justify-content-center align-items-center">
                    <span class="fw-bold text-white">Max</span>
                    <span id="max-text" class="text-white">
                        @*SET VIA JS*@
                    </span>
                </div>

                <div class="flex-grow-1 bg-secondary shadow rounded d-flex flex-column justify-content-center align-items-center">
                    <span class="fw-bold text-white">Wynik</span>
                    <span id="percent-text" class="text-white">
                        @*SET VIA JS*@
                    </span>
                </div>
            </div>

            <div class="flex-grow-1 bg-white shadow rounded h-100 d-flex justify-content-center align-items-center">
                <span class="me-2">Rozwiązanie (Pięciolinia):</span>
                <span id="answer">
                    @*SET VIA JS*@
                </span>
            </div>
        </div>

        <div id="comment-div" class="mt-3">
            <span class="fw-bold">Komentarz oceniającego</span>
            <p id="comment-text" class="m-0">
                @*SET VIA JS*@
            </p>
        </div>
        <div id="no-comment-div" class="mt-3">
            <span class="fw-bold">Oceniający nie zamieścił komentarza</span>
        </div>
    </div>

    <div class="bottom-bar d-flex align-items-center">
        <a asp-page="Assigned" class="btn btn-danger btn-std-width me-3">Powrót</a>
        <button onclick="prevQuestion()" class="btn btn-secondary btn-std-width ms-auto me-3">Poprzednie</button>

        <div id="excersises-buttons" class="d-flex align-items-center">
            @*EXCERSISES ARE FILLED WITH JS SCRIPT*@
        </div>
        <div id="div-last-ex">
            <img src="~/images/three_dots.png" alt="Three dots" class="ms-2 three-dots-img">
            <button id="btn-last-ex" type="button" onclick="lastQuestion()" class="btn btn-outline-secondary btn-tiny-width p-1 ms-2"></button>
        </div>

        <button onclick="nextQuestion()" class="btn btn-secondary btn-std-width ms-3">Następne</button>
    </div>
</div>

<script>
    const questions = @Html.Raw(JsonConvert.SerializeObject(Model.QuizResult.Quiz.Excersises.Select(e => e.Question)));
    const answers = @Html.Raw(JsonConvert.SerializeObject(Model.QuizResult.ExcersiseResults.Select(r => r.ExcersiseSolution.Answer)));
    const results = @Json.Serialize(Model.QuizResult.ExcersiseResults);

    var currentIndex = 0;

    function loadQuestion(index) {
        if (index >= 0 && index < questions.length) {
            document.getElementById("excersise-number").innerText = index + 1;
            document.getElementById("excersise-question").innerText = questions[index];

            document.getElementById("answer").innerText = answers[index];
            document.getElementById("points-text").innerText = results[index].points;
            document.getElementById("max-text").innerText = results[index].maxPoints;
            document.getElementById("percent-text").innerText = Math.round((results[index].points / results[index].maxPoints) * 100) + "%";

            var isComment = results[index].comment != '';
            document.getElementById("comment-div").style.display = isComment ? "inline-block" : "none";
            document.getElementById("no-comment-div").style.display = isComment ? "none" : "inline-block";
            document.getElementById("comment-text").innerText = results[index].comment;

            generateButtons(index);
        }
    }

    const maxVisibleButtons = 9;
    const targetVisibleOneSide = Math.floor(maxVisibleButtons / 2)
    function generateButtons(index) {
        var questionButtonsContainer = document.getElementById("excersises-buttons");
        questionButtonsContainer.innerHTML = '';

        var start = Math.max(index - targetVisibleOneSide, 0);
        var end = Math.min(index + targetVisibleOneSide, questions.length - 1);

        var missingStart = start - (index - targetVisibleOneSide);
        var missingEnd = (index + targetVisibleOneSide) - end;

        if (missingStart > 0 && missingEnd == 0) {
            end = Math.min(end + missingStart, questions.length - 1);
        }
        else if (missingEnd > 0 && missingStart == 0) {
            start = Math.max(start - missingEnd, 0);
        }

        if (end == questions.length - 2) {
            end++;
        }

        for (var i = start; i <= end; i++) {
            var button = document.createElement("button");
            button.className = "btn " + (i === index ? "btn-secondary btn-current" : "btn-outline-secondary btn-hidable") + " btn-tiny-width p-1";
            button.innerText = i + 1;

            button.onclick = (function (i) {
                return function () {
                    currentIndex = i;
                    loadQuestion(currentIndex);
                };
            })(i);

            questionButtonsContainer.appendChild(button);

            if (i !== start) {
                button.classList.add("ms-2");
            }
        }

        document.getElementById("btn-last-ex").innerText = questions.length;
        document.getElementById("div-last-ex").style.display = end < questions.length - 1 ? 'inline-block' : 'none';
    }

    function prevQuestion() {
        if (currentIndex > 0) {
            currentIndex--;
            loadQuestion(currentIndex);
        }
    }

    function nextQuestion() {
        if (currentIndex < questions.length - 1) {
            currentIndex++;
            loadQuestion(currentIndex);
        }
    }

    function lastQuestion() {
        if (currentIndex < questions.length - 1) {
            currentIndex = questions.length - 1;
            loadQuestion(currentIndex);
        }
    }

    loadQuestion(currentIndex);

</script>